name: Publish npm
env:
  DEBUG: napi:*
  MACOSX_DEPLOYMENT_TARGET: "10.13"
permissions:
  contents: write
  id-token: write
on:
  push:
    tags:
      - v**
  workflow_dispatch:

defaults:
  run:
    working-directory: ./clients/mediafx_node

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            build: yarn build --platform --target x86_64-apple-darwin
          - host: windows-latest
            build: yarn build --platform
            target: x86_64-pc-windows-msvc
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            build: yarn build --platform --target x86_64-unknown-linux-gnu --use-napi-cross
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            build: yarn build --platform --target x86_64-unknown-linux-musl -x
          - host: macos-latest
            target: aarch64-apple-darwin
            build: yarn build --platform --target aarch64-apple-darwin
          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            build: yarn build --platform --target aarch64-unknown-linux-gnu --use-napi-cross
          - host: ubuntu-latest
            target: aarch64-unknown-linux-musl
            build: yarn build --platform --target aarch64-unknown-linux-musl -x
    name: stable - ${{ matrix.settings.target }} - node@22
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v4
        with:
          # Required by "yarn version" https://yarnpkg.com/features/release-workflow
          fetch-depth: 0
      - name: Setup node
        uses: actions/setup-node@v4
        # Skip corepack check and enable manually
        # https://github.com/actions/setup-node/issues/531
        env:
          SKIP_YARN_COREPACK_CHECK: true
        with:
          node-version: 22
          cache: yarn
          cache-dependency-path: ./clients/mediafx_node/yarn.lock
      - name: Enable corepack
        run: corepack enable
      - name: Install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.napi-rs
            .cargo-cache
            target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}
      - uses: goto-bus-stop/setup-zig@v2
        if: ${{ contains(matrix.settings.target, 'musl') }}
        with:
          version: 0.13.0
      - name: Install cargo-zigbuild
        uses: taiki-e/install-action@v2
        if: ${{ contains(matrix.settings.target, 'musl') }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tool: cargo-zigbuild
      - name: Setup toolchain
        run: ${{ matrix.settings.setup }}
        if: ${{ matrix.settings.setup }}
        shell: bash
      - name: Install dependencies
        run: yarn install --immutable --mode=skip-build
      - name: Set version
        shell: bash
        run: |
          CRATE_VERSION=$(../../.github/workflows/get-version.sh mediafx_node)
          yarn version $CRATE_VERSION
          yarn run version
      - name: Build
        run: ${{ matrix.settings.build }}
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: matrix.settings.target != 'wasm32-wasi-preview1-threads'
        with:
          name: bindings-${{ matrix.settings.target }}
          path: "./clients/mediafx_node/*.node"
          if-no-files-found: error
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: matrix.settings.target == 'wasm32-wasi-preview1-threads'
        with:
          name: bindings-${{ matrix.settings.target }}
          path: "./clients/mediafx_node/*.wasm"
          if-no-files-found: error

  publish:
    name: Publish
    environment: release
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        # Skip corepack check and enable manually
        # https://github.com/actions/setup-node/issues/531
        env:
          SKIP_YARN_COREPACK_CHECK: true
        with:
          node-version: 22
          cache: yarn
          cache-dependency-path: ./clients/mediafx_node/yarn.lock
          registry-url: https://registry.npmjs.org
      - name: Enable corepack
        run: corepack enable
      - name: Install dependencies
        run: yarn install --immutable --mode=skip-build
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./clients/mediafx_node/artifacts
      - name: Move artifacts
        run: yarn artifacts
      - name: List packages
        run: ls -R ./npm
        shell: bash
      - name: Get version
        id: version
        run: |
          echo "crateversion=$(../../.github/workflows/get-version.sh mediafx_node)" >> "$GITHUB_OUTPUT"
      - name: Publish
        if: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name == format('v{0}', steps.version.outputs.crate_version) }}
        run: |
          npm publish --access public --provenance
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
